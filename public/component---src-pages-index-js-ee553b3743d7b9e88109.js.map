{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/products-items.js","webpack://gatsby-starter-default/./src/components/Home.js","webpack://gatsby-starter-default/./src/pages/index.js"],"names":["data","useStaticQuery","allProducts","allWpProduct","edges","useState","slice","list","setList","loadMore","setLoadMore","length","hasMore","setHasMore","useEffect","currentLength","nextResults","isMore","className","item","window","localStorage","getItem","setItem","colProduct","map","article","i","col","node","onClick","page","NavBar"],"mappings":"yPAwIA,EAnIqB,WASjB,IAAMA,GAAOC,oBAAe,cAwCtBC,EAAcF,EAAKG,aAAaC,MAOtC,GAAwBC,eAAS,OAAIH,EAAYI,MAAM,EAVzC,KAUPC,EAAP,KAAaC,EAAb,KAGA,GAAgCH,eAAS,GAAlCI,EAAP,KAAiBC,EAAjB,KAGA,GAA8BL,cAASH,EAAYS,OAhBrC,GAgBPC,EAAP,KAAgBC,EAAhB,KAuCA,OA/BAC,gBAAU,WACN,GAAIL,GAAYG,EAAS,CACrB,IAAMG,EAAgBR,EAAKI,OAErBK,EADSD,EAAgBb,EAAYS,OAErCT,EAAYI,MAAMS,EAAeA,EA7BjC,GA8BA,GACNP,EAAQ,GAAD,eAAKD,IAAL,OAAcS,KACrBN,GAAY,MAEjB,CAACD,EAAUG,KAGdE,gBAAU,WACN,IAAMG,EAASV,EAAKI,OAAST,EAAYS,OACzCE,EAAWI,KACZ,CAACV,IAgBA,uBAAKW,UAAS,8BAblB,SAAoBC,GAChB,IAAuB,IAAlB,IAAQA,GAET,MAAO,mBAAqBC,QAAW,aAAgBC,aAAaC,QAAQ,cAG1D,oBAAXF,QAA2BC,aAAaE,QAAQ,aAAc,KAO1BC,CAA+B,oBAAXJ,QAA4BC,aAAaC,QAAQ,eAAtG,KAWTf,EAAKkB,KAAI,SAACC,EAASC,GAAV,OACN,gCACI,gBAAC,IAAD,CAASC,IAAI,GAAGF,QAASA,EAAQG,WAGxCjB,EACG,uBAAKM,UAAU,2BACX,0BAAQA,UAAU,uBAAuBY,QAvDlC,WACnBpB,GAAY,KAsDA,iBAGJ,uBAAKQ,UAAU,aCxF/B,EArCa,YACIjB,oBAAe,aAoB5B,OACI,gCACI,uBAAKiB,UAAU,a,UCpB3B,aAAe,OACX,gBAAC,KAAD,CAAQa,KAAK,QACT,gBAAC,EAAD,MACA,uBAAKb,UAAU,kBACX,gBAACc,EAAA,EAAD,MACA,gBAAC,EAAD","file":"component---src-pages-index-js-ee553b3743d7b9e88109.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {graphql, Link, useStaticQuery} from 'gatsby';\r\nimport Product from \"../components/products-item\"\r\nimport {isEmpty} from 'lodash'\r\n\r\nconst ProductItems = () => {\r\n\r\n    // console.log('props', catID);\r\n    //\r\n    // const cId = 'dGVybToxODc='\r\n\r\n\r\n\r\n\r\n    const data = useStaticQuery(graphql` \r\n    {\r\n                allWpProduct {\r\n                  edges {\r\n                    node {\r\n                      id\r\n                      name\r\n                      sku\r\n                      onSale\r\n                      productCategories {\r\n                        nodes {\r\n                          name\r\n                          slug\r\n                          id\r\n                        }\r\n                      }\r\n                      ... on WpVariableProduct {\r\n                        price\r\n                        salePrice\r\n                        name\r\n                      }\r\n                      image {\r\n                        mediaDetails {\r\n                          sizes {\r\n                            sourceUrl\r\n                            name \r\n                          }\r\n                        }\r\n                        mediaItemUrl\r\n                      }\r\n                      slug\r\n                    }\r\n                  }\r\n                }\r\n    }\r\n  `)\r\n\r\n    const count = 4\r\n\r\n    // Array of all news articles\r\n    const allProducts = data.allWpProduct.edges\r\n\r\n    // localStorage.setItem('allWpProduct', data)\r\n\r\n    // {localStorage.clear()}\r\n\r\n    // State for the list\r\n    const [list, setList] = useState([...allProducts.slice(0, count )])\r\n\r\n    // State to trigger oad more\r\n    const [loadMore, setLoadMore] = useState(false)\r\n\r\n    // State of whether there is more to load\r\n    const [hasMore, setHasMore] = useState(allProducts.length > count )\r\n\r\n    // Load more button click\r\n    const handleLoadMore = () => {\r\n        setLoadMore(true)\r\n    }\r\n\r\n    // Handle loading more articles\r\n    useEffect(() => {\r\n        if (loadMore && hasMore) {\r\n            const currentLength = list.length\r\n            const isMore = currentLength < allProducts.length\r\n            const nextResults = isMore\r\n                ? allProducts.slice(currentLength, currentLength + count )\r\n                : []\r\n            setList([...list, ...nextResults])\r\n            setLoadMore(false)\r\n        }\r\n    }, [loadMore, hasMore]) //eslint-disable-line\r\n\r\n    //Check if there is more\r\n    useEffect(() => {\r\n        const isMore = list.length < allProducts.length\r\n        setHasMore(isMore)\r\n    }, [list]) //eslint-disable-line\r\n\r\n\r\n    function colProduct(item) {\r\n        if ( isEmpty(item) === false ) {\r\n            //console.log('isEmpty', true);\r\n            return 'row-cols-' + typeof window !== 'undefined' && (localStorage.getItem('colProduct'));\r\n        } else {\r\n            //console.log('isEmpty', false);\r\n            typeof window !== 'undefined' && (localStorage.setItem('colProduct', '2'));\r\n        }\r\n        //console.log( 'isEmpty---', isEmpty(item) )\r\n    }\r\n    //const colItem = colProduct( localStorage.getItem('colProduct') );\r\n\r\n    return (\r\n        <div className={` row box-products row-cols-${ colProduct(  typeof window !== 'undefined' && ( localStorage.getItem('colProduct') ) ) } `}>\r\n            {/*<pre>{JSON.stringify( localStorage.getItem('colProduct') , null, 4)}</pre>*/}\r\n\r\n            {/*{localStorage.clear()}*/}\r\n\r\n            {/*<div className=\"col-12\">*/}\r\n            {/*    <pre>{JSON.stringify(localStorage, null, 4)}</pre>*/}\r\n            {/*</div>*/}\r\n\r\n            {/*{console.log('colItem', colItem)}*/}\r\n\r\n            {list.map((article, i ) => (\r\n                <>\r\n                    <Product col=\"\" article={article.node} />\r\n                </>\r\n            ))}\r\n            {hasMore ? (\r\n                <div className=\"col-12 text-center mt-3\">\r\n                    <button className=\"btn style-2 max-w700\" onClick={handleLoadMore}>показать еще</button>\r\n                </div>\r\n            ) : (\r\n                <div className=\"col-12\">\r\n                    {/*<p>No more results</p>*/}\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ProductItems\r\n\r\n","import React from \"react\"\r\nimport {useStaticQuery, graphql, Link} from \"gatsby\"\r\n\r\nconst Home = () => {\r\n    const data = useStaticQuery(graphql`\r\n    {\r\n      wpPage(isFrontPage: {eq: true}) {\r\n                isFrontPage\r\n                acf_banners {\r\n                    ifBanner\r\n                    bannerTitle\r\n                    banner {\r\n                      sourceUrl\r\n                    }\r\n                    linkUrl {\r\n                      url\r\n                    }\r\n                }\r\n      }\r\n    }\r\n  `)\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"banner\">\r\n                {/*<Link to={`${data.wpPage.acf_banners.linkUrl.url}`}>*/}\r\n                {/*    <img src={data.wpPage.acf_banners.banner.sourceUrl} alt=\"\"/>*/}\r\n                {/*    <div className=\"container\">*/}\r\n                {/*        <div className=\"content-banner\">*/}\r\n                {/*            {data.wpPage.acf_banners.bannerTitle}*/}\r\n                {/*        </div>*/}\r\n                {/*    </div>*/}\r\n                {/*</Link>*/}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home","import React from \"react\"\r\nimport Layout from \"../components/layout\";\r\nimport ProductItems from \"../components/products-items\";\r\nimport Home from \"../components/Home\";\r\nimport NavBar from \"../components/NavBar\";\r\n\r\nexport default () => (\r\n    <Layout page=\"home\">\r\n        <Home />\r\n        <div className=\"container mt-3\">\r\n            <NavBar />\r\n            <ProductItems />\r\n        </div>\r\n    </Layout>\r\n);\r\n"],"sourceRoot":""}